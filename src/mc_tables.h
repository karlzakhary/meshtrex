// src/mc_tables.h
#pragma once

#include <vector>

// Standard Marching Cubes Triangle Table
// Maps an 8-bit cube index to a list of 12 vertex indices (0-11) needed to form triangles.
// Max 5 triangles (15 indices) per case. Each row MUST have exactly 16 entries.
// List terminated by -1. More -1s pad rows with fewer than 5 triangles.
// Source: Commonly attributed to Paul Bourke (paulbourke.net/geometry/polygonise/)
// and implementations like VTK, with corrections applied.

namespace MarchingCubes {

// triTable[caseIndex * 16 + i] gives the i-th vertex index (0-11) for the triangles,
// or -1 if fewer than 15 vertices are needed.
static const int triTable[256][16] = {
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 0
    {0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 5
    {9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1},
    {3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 10
    {1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1},
    {3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1},
    {3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1},
    {9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 15
    {4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1},
    {1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 20
    {3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1},
    {9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
    {4, 7, 2, 9, 2, 4, 9, 10, 2, 9, 3, 2, -1, -1, -1, -1}, // Corrected case 23 (12 indices + 4x-1 = 16)
    {2, 3, 11, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {7, 11, 2, 7, 8, 11, 4, 0, 8, -1, -1, -1, -1, -1, -1, -1}, // 25
    {9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
    {4, 7, 11, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1}, // Corrected case 27 (12 indices + 4x-1 = 16)
    {1, 3, 10, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1},
    {1, 7, 8, 1, 10, 7, 10, 0, 7, 10, 11, 7, -1, -1, -1, -1}, // Corrected case 29 (12 indices + 4x-1 = 16)
    {11, 10, 0, 11, 0, 3, 10, 4, 0, 8, 4, 10, 7, 8, 4, -1}, // Corrected case 30 (15 indices + 1x-1 = 16)
    {4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1}, // 31
    {9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1}, // 35
    {1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
    {5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1},
    {2, 10, 5, 3, 2, 5, 3, 8, 2, 4, 5, 8, -1, -1, -1, -1}, // Corrected case 39 (12 indices + 4x-1 = 16)
    {2, 3, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 40
    {0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
    {0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
    {2, 1, 5, 2, 11, 1, 4, 8, 11, 4, 5, 11, -1, -1, -1, -1}, // Corrected case 43 (12 indices + 4x-1 = 16)
    {10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1},
    {4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1}, // Corrected case 45 (12 indices + 4x-1 = 16)
    {5, 4, 0, 5, 0, 11, 11, 0, 10, 11, 3, 0, -1, -1, -1, -1}, // Corrected case 46 (12 indices + 4x-1 = 16)
    {5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1}, // 47
    {9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1},
    {0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1}, // 50
    {1, 7, 3, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1},
    {10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1}, // Corrected case 53 (12 indices + 4x-1 = 16)
    {8, 0, 2, 8, 4, 0, 4, 5, 0, 4, 7, 5, -1, -1, -1, -1}, // Corrected case 54 (12 indices + 4x-1 = 16)
    {7, 3, 2, 7, 5, 3, 5, 10, 3, 5, 4, 10, -1, -1, -1, -1}, // Corrected case 55 (12 indices + 4x-1 = 16)
    {5, 7, 9, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1}, // 56
    {9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 11, 0, -1, -1, -1, -1}, // Corrected case 57 (12 indices + 4x-1 = 16)
    {2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1}, // Corrected case 58 (12 indices + 4x-1 = 16)
    {11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1},
    {9, 5, 4, 10, 1, 11, 1, 3, 11, 1, 7, 3, -1, -1, -1, -1}, // Corrected case 60 (12 indices + 4x-1 = 16)
    {1, 11, 10, 1, 7, 11, 1, 0, 7, 7, 9, 0, -1, -1, -1, -1}, // Corrected case 61 (12 indices + 4x-1 = 16)
    {11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 5, 10, 7, 5, 8, -1}, // Corrected case 62 (15 indices + 1x-1 = 16)
    {11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 63
    {10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 65
    {9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
    {1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1},
    {9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1}, // 70
    {5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1}, // Corrected case 71 (12 indices + 4x-1 = 16)
    {2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1},
    {0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
    {5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1}, // Corrected case 75 (12 indices + 4x-1 = 16)
    {6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1}, // 76
    {0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1}, // Corrected case 77 (12 indices + 4x-1 = 16)
    {3, 11, 6, 0, 3, 6, 0, 9, 3, 5, 9, 6, -1, -1, -1, -1}, // Corrected case 78 (12 indices + 4x-1 = 16)
    {6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1},
    {5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 80
    {4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1},
    {1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
    {10, 6, 5, 1, 9, 7, 9, 3, 7, 9, 4, 3, -1, -1, -1, -1}, // Corrected case 83 (12 indices + 4x-1 = 16)
    {6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1},
    {1, 2, 5, 5, 2, 6, 3, 0, 4, 0, 7, 4, -1, -1, -1, -1}, // Corrected case 85 (12 indices + 4x-1 = 16)
    {8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1}, // Corrected case 86 (12 indices + 4x-1 = 16)
    {7, 3, 2, 7, 2, 6, 7, 6, 4, 6, 5, 4, -1, -1, -1, -1}, // Corrected case 87 (12 indices + 4x-1 = 16)
    {6, 5, 10, 3, 11, 2, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1}, // 88
    {7, 11, 2, 7, 8, 11, 4, 0, 8, 5, 10, 6, -1, -1, -1, -1},
    {5, 10, 6, 0, 1, 9, 2, 3, 11, 8, 4, 7, -1, -1, -1, -1}, // 90
    {9, 1, 2, 9, 2, 7, 7, 2, 11, 7, 4, 9, 5, 10, 6, -1}, // Corrected case 91 (15 indices + 1x-1 = 16)
    {8, 4, 7, 3, 11, 5, 11, 1, 5, 11, 6, 1, -1, -1, -1, -1}, // Corrected case 92 (12 indices + 4x-1 = 16)
    {5, 1, 11, 5, 11, 7, 7, 11, 6, 7, 0, 1, -1, -1, -1, -1}, // Corrected case 93 (12 indices + 4x-1 = 16)
    {6, 3, 11, 6, 0, 3, 6, 5, 0, 5, 9, 0, 7, 8, 4, -1}, // Corrected case 94 (15 indices + 1x-1 = 16)
    {6, 5, 9, 6, 9, 7, 7, 9, 11, 7, 8, 9, -1, -1, -1, -1}, // Corrected case 95 (12 indices + 4x-1 = 16)
    {10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 96
    {4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1},
    {10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1},
    {8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1}, // Corrected case 99 (12 indices + 4x-1 = 16)
    {1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1}, // 100
    {3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1}, // Corrected case 101 (12 indices + 4x-1 = 16)
    {0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1},
    {10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 2, 2, 8, 11, 4, 9, 10, 9, 6, 10, -1, -1, -1, -1}, // Corrected case 105 (12 indices + 4x-1 = 16)
    {3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 10, 0, -1, -1, -1, -1}, // Corrected case 106 (12 indices + 4x-1 = 16)
    {6, 4, 8, 11, 6, 8, 11, 10, 6, 11, 1, 10, -1, -1, -1, -1}, // Corrected case 107 (12 indices + 4x-1 = 16)
    {9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1}, // Corrected case 108 (12 indices + 4x-1 = 16)
    {8, 11, 1, 8, 1, 0, 4, 9, 6, 9, 1, 6, -1, -1, -1, -1}, // Corrected case 109 (12 indices + 4x-1 = 16)
    {3, 11, 0, 3, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1}, // 110
    {6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {10, 7, 8, 10, 6, 7, 6, 9, 7, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 3, 4, 7, 10, 7, 6, 10, 7, 9, 6, -1, -1, -1, -1}, // Corrected case 113 (12 indices + 4x-1 = 16)
    {10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1}, // Corrected case 114 (12 indices + 4x-1 = 16)
    {10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1}, // 115
    {1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1}, // Corrected case 116 (12 indices + 4x-1 = 16)
    {2, 6, 9, 2, 9, 3, 3, 9, 0, 7, 8, 4, -1, -1, -1, -1}, // Corrected case 117 (12 indices + 4x-1 = 16)
    {6, 7, 8, 6, 8, 0, 0, 8, 9, 0, 9, 2, -1, -1, -1, -1}, // Corrected case 118 (12 indices + 4x-1 = 16)
    {7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {7, 8, 3, 7, 3, 6, 6, 3, 2, 6, 2, 10, -1, -1, -1, -1}, // Corrected case 120 (12 indices + 4x-1 = 16)
    {2, 0, 8, 2, 8, 7, 2, 7, 10, 7, 6, 10, -1, -1, -1, -1}, // Corrected case 121 (12 indices + 4x-1 = 16)
    {1, 9, 0, 2, 3, 10, 3, 8, 10, 3, 7, 8, 6, 10, 7, -1}, // Corrected case 122 (15 indices + 1x-1 = 16)
    {10, 6, 7, 1, 9, 3, 9, 11, 3, 9, 8, 11, -1, -1, -1, -1}, // Corrected case 123 (12 indices + 4x-1 = 16)
    {7, 8, 9, 7, 9, 1, 7, 1, 3, 7, 3, 6, -1, -1, -1, -1}, // Corrected case 124 (12 indices + 4x-1 = 16)
    {3, 6, 7, 0, 3, 7, 0, 7, 10, 0, 10, 9, -1, -1, -1, -1}, // Corrected case 125 (12 indices + 4x-1 = 16)
    {0, 1, 9, 8, 7, 10, 7, 6, 10, 7, 3, 10, -1, -1, -1, -1}, // Corrected case 126 (12 indices + 4x-1 = 16)
    {6, 7, 3, 6, 3, 10, 10, 3, 8, -1, -1, -1, -1, -1, -1, -1}, // 127
    {7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 3, 7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 1, 9, 7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 130
    {1, 8, 3, 1, 9, 8, 7, 11, 6, -1, -1, -1, -1, -1, -1, -1},
    {1, 2, 10, 7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {1, 2, 10, 0, 8, 3, 6, 7, 11, -1, -1, -1, -1, -1, -1, -1},
    {9, 2, 10, 9, 0, 2, 7, 11, 6, -1, -1, -1, -1, -1, -1, -1},
    {2, 8, 3, 2, 10, 8, 10, 9, 8, 6, 7, 11, -1, -1, -1, -1}, // Corrected case 135 (12 indices + 4x-1 = 16)
    {7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 136
    {7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1},
    {2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1},
    {1, 6, 2, 1, 8, 6, 8, 7, 6, 9, 8, 1, -1, -1, -1, -1}, // Corrected case 140 (12 indices + 4x-1 = 16)
    {10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1}, // 141
    {10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1}, // Corrected case 142 (12 indices + 4x-1 = 16)
    {10, 7, 6, 10, 1, 7, 9, 0, 3, 9, 3, 7, -1, -1, -1, -1}, // Corrected case 143 (12 indices + 4x-1 = 16)
    {7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1},
    {6, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 145
    {6, 0, 8, 6, 4, 0, 4, 3, 0, -1, -1, -1, -1, -1, -1, -1},
    {0, 1, 9, 6, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {1, 9, 6, 1, 6, 3, 3, 6, 4, 3, 4, 8, -1, -1, -1, -1}, // Corrected case 148 (12 indices + 4x-1 = 16)
    {1, 2, 10, 4, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 3, 1, 2, 10, 4, 7, 6, -1, -1, -1, -1, -1, -1, -1}, // 150
    {9, 2, 10, 9, 0, 2, 6, 4, 7, -1, -1, -1, -1, -1, -1, -1},
    {2, 10, 7, 2, 7, 3, 3, 7, 4, 3, 4, 8, 9, 10, 2, -1}, // Corrected case 152 (15 indices + 1x-1 = 16)
    {2, 3, 6, 2, 6, 7, 7, 6, 4, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 7, 0, 7, 2, 2, 7, 6, -1, -1, -1, -1, -1, -1, -1},
    {1, 9, 0, 3, 6, 2, 6, 7, 2, 6, 4, 7, -1, -1, -1, -1}, // Corrected case 155 (12 indices + 4x-1 = 16)
    {1, 9, 7, 1, 7, 3, 3, 7, 6, 3, 6, 4, -1, -1, -1, -1}, // Corrected case 156 (12 indices + 4x-1 = 16)
    {3, 6, 4, 3, 10, 6, 1, 10, 3, -1, -1, -1, -1, -1, -1, -1}, // 157
    {0, 10, 6, 0, 8, 10, 8, 4, 10, 8, 1, 10, -1, -1, -1, -1}, // Corrected case 158 (12 indices + 4x-1 = 16)
    {4, 0, 9, 4, 9, 6, 6, 9, 3, 6, 3, 10, -1, -1, -1, -1}, // Corrected case 159 (12 indices + 4x-1 = 16)
    {10, 9, 8, 10, 8, 6, 6, 8, 4, -1, -1, -1, -1, -1, -1, -1}, // 160
    {4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1},
    {0, 5, 4, 1, 5, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1},
    {11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1}, // Corrected case 164 (12 indices + 4x-1 = 16)
    {1, 2, 10, 9, 5, 4, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1}, // 165
    {3, 0, 8, 1, 2, 10, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1},
    {5, 2, 10, 5, 4, 2, 4, 0, 2, 11, 7, 6, -1, -1, -1, -1}, // Corrected case 167 (12 indices + 4x-1 = 16)
    {11, 7, 6, 2, 10, 3, 10, 8, 3, 10, 5, 8, 4, 8, 3, -1}, // Corrected case 168 (15 indices + 1x-1 = 16)
    {7, 6, 11, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {6, 11, 7, 5, 4, 9, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1}, // 170
    {7, 6, 11, 0, 1, 9, 5, 4, 0, 5, 0, 9, -1, -1, -1, -1}, // Corrected case 172 (12 indices + 4x-1 = 16)
    {3, 5, 4, 3, 4, 8, 3, 8, 1, 6, 11, 7, -1, -1, -1, -1}, // Corrected case 173 (12 indices + 4x-1 = 16)
    {1, 2, 10, 9, 5, 4, 3, 6, 11, 3, 7, 6, -1, -1, -1, -1}, // Corrected case 174 (12 indices + 4x-1 = 16)
    {1, 2, 10, 9, 5, 0, 8, 3, 7, 8, 7, 11, 6, 11, 7, -1}, // Corrected case 175 (15 indices + 1x-1 = 16)
    {5, 4, 0, 5, 0, 9, 10, 3, 2, 10, 6, 3, 11, 7, 6, -1}, // Corrected case 176 (15 indices + 1x-1 = 16)
    {11, 7, 6, 3, 8, 5, 3, 5, 2, 5, 10, 2, -1, -1, -1, -1}, // Corrected case 177 (12 indices + 4x-1 = 16)
    {7, 6, 11, 8, 9, 5, 8, 5, 7, -1, -1, -1, -1, -1, -1, -1}, // 178
    {9, 5, 3, 9, 3, 7, 7, 3, 11, 7, 11, 6, -1, -1, -1, -1}, // Corrected case 179 (12 indices + 4x-1 = 16)
    {8, 0, 1, 8, 1, 7, 7, 1, 5, 11, 7, 6, -1, -1, -1, -1}, // Corrected case 180 (12 indices + 4x-1 = 16)
    {11, 7, 6, 1, 5, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 181
    {1, 2, 9, 9, 2, 5, 5, 2, 6, 5, 6, 7, -1, -1, -1, -1}, // Corrected case 182 (12 indices + 4x-1 = 16)
    {0, 9, 5, 0, 5, 7, 0, 7, 8, 2, 6, 3, -1, -1, -1, -1}, // Corrected case 183 (12 indices + 4x-1 = 16)
    {0, 2, 6, 0, 6, 8, 8, 6, 7, 8, 7, 5, -1, -1, -1, -1}, // Corrected case 184 (12 indices + 4x-1 = 16)
    {7, 5, 2, 7, 2, 3, 3, 2, 6, -1, -1, -1, -1, -1, -1, -1}, // 185
    {7, 6, 11, 4, 10, 9, 10, 6, 9, -1, -1, -1, -1, -1, -1, -1},
    {3, 0, 8, 4, 9, 1, 9, 10, 1, 9, 6, 10, 7, 11, 6, -1}, // Corrected case 187 (15 indices + 1x-1 = 16)
    {1, 10, 6, 1, 6, 0, 0, 6, 4, 11, 7, 6, -1, -1, -1, -1}, // Corrected case 188 (12 indices + 4x-1 = 16)
    {1, 10, 6, 1, 6, 8, 8, 6, 4, 11, 7, 3, -1, -1, -1, -1}, // Corrected case 189 (12 indices + 4x-1 = 16)
    {4, 9, 1, 4, 1, 11, 11, 1, 6, 11, 6, 7, -1, -1, -1, -1}, // Corrected case 190 (12 indices + 4x-1 = 16)
    {8, 0, 3, 4, 9, 10, 9, 11, 10, 9, 7, 11, 6, 10, 7, -1}, // Corrected case 191 (15 indices + 1x-1 = 16)
    {11, 7, 6, 0, 4, 10, 4, 1, 10, 4, 8, 1, -1, -1, -1, -1}, // Corrected case 192 (12 indices + 4x-1 = 16)
    {11, 7, 6, 4, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 193
    {6, 9, 7, 6, 7, 2, 2, 7, 3, 2, 3, 10, -1, -1, -1, -1}, // Corrected case 194 (12 indices + 4x-1 = 16)
    {8, 7, 0, 7, 6, 0, 10, 2, 0, -1, -1, -1, -1, -1, -1, -1},
    {1, 9, 0, 3, 7, 10, 7, 6, 10, 7, 2, 6, -1, -1, -1, -1}, // Corrected case 196 (12 indices + 4x-1 = 16)
    {6, 8, 7, 6, 1, 8, 1, 10, 8, 1, 2, 10, -1, -1, -1, -1}, // Corrected case 197 (12 indices + 4x-1 = 16)
    {1, 3, 9, 3, 6, 9, 3, 2, 6, 7, 9, 6, -1, -1, -1, -1}, // Corrected case 198 (12 indices + 4x-1 = 16)
    {0, 9, 3, 0, 3, 6, 6, 3, 2, 6, 7, 0, -1, -1, -1, -1}, // Corrected case 199 (12 indices + 4x-1 = 16)
    {0, 1, 6, 0, 6, 8, 8, 6, 7, -1, -1, -1, -1, -1, -1, -1}, // 200
    {6, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {11, 5, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 3, 11, 5, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 1, 9, 11, 5, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {1, 8, 3, 1, 9, 8, 11, 5, 10, -1, -1, -1, -1, -1, -1, -1}, // 205
    {1, 2, 5, 1, 5, 11, 11, 5, 10, -1, -1, -1, -1, -1, -1, -1},
    {0, 8, 3, 1, 2, 5, 2, 11, 5, 2, 10, 11, -1, -1, -1, -1}, // Corrected case 206 (12 indices + 4x-1 = 16)
    {9, 2, 10, 9, 0, 2, 11, 5, 0, 5, 4, 0, -1, -1, -1, -1}, // Corrected case 207 (12 indices + 4x-1 = 16)
    {3, 1, 9, 3, 9, 11, 11, 9, 8, 11, 5, 9, 10, 11, 5, -1}, // Corrected case 208 (15 indices + 1x-1 = 16)
    {5, 10, 2, 5, 2, 3, 3, 2, 11, -1, -1, -1, -1, -1, -1, -1}, // 209
    {8, 11, 2, 8, 2, 0, 0, 2, 10, 0, 10, 5, -1, -1, -1, -1}, // Corrected case 210 (12 indices + 4x-1 = 16)
    {1, 9, 0, 3, 11, 5, 11, 10, 5, 11, 2, 10, -1, -1, -1, -1}, // Corrected case 211 (12 indices + 4x-1 = 16)
    {1, 9, 8, 1, 8, 2, 2, 8, 11, 2, 11, 5, 10, 2, 5, -1}, // Corrected case 212 (15 indices + 1x-1 = 16)
    {1, 5, 10, 3, 1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 213
    {0, 8, 5, 0, 5, 1, 1, 5, 10, -1, -1, -1, -1, -1, -1, -1},
    {3, 5, 10, 3, 10, 0, 0, 10, 9, 0, 9, 8, -1, -1, -1, -1}, // Corrected case 215 (12 indices + 4x-1 = 16)
    {5, 10, 9, 5, 9, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 216
    {4, 7, 8, 5, 10, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {0, 4, 7, 0, 7, 3, 3, 7, 11, 5, 10, 11, -1, -1, -1, -1}, // Corrected case 218 (12 indices + 4x-1 = 16)
    {1, 9, 0, 8, 4, 7, 11, 5, 10, -1, -1, -1, -1, -1, -1, -1},
    {10, 11, 5, 1, 9, 3, 9, 7, 3, 9, 4, 7, -1, -1, -1, -1}, // Corrected case 220 (12 indices + 4x-1 = 16)
    {8, 4, 7, 1, 2, 5, 2, 11, 5, 2, 10, 11, -1, -1, -1, -1}, // Corrected case 221 (12 indices + 4x-1 = 16)
    {0, 4, 7, 0, 7, 11, 0, 11, 3, 1, 2, 10, 5, 11, 2, -1}, // Corrected case 222 (15 indices + 1x-1 = 16)
    {7, 11, 5, 7, 5, 2, 7, 2, 0, 0, 2, 9, 10, 5, 2, -1}, // Corrected case 223 (15 indices + 1x-1 = 16)
    {7, 11, 5, 7, 5, 3, 3, 5, 9, 3, 9, 1, 10, 5, 3, -1}, // Corrected case 224 (15 indices + 1x-1 = 16)
    {4, 7, 8, 5, 10, 2, 10, 3, 2, 10, 11, 3, -1, -1, -1, -1}, // Corrected case 225 (12 indices + 4x-1 = 16)
    {5, 10, 11, 4, 7, 0, 7, 8, 0, 7, 2, 0, -1, -1, -1, -1}, // Corrected case 226 (12 indices + 4x-1 = 16)
    {0, 1, 9, 4, 7, 8, 2, 3, 10, 3, 5, 10, 11, 5, 3, -1}, // Corrected case 227 (15 indices + 1x-1 = 16)
    {1, 9, 4, 1, 4, 2, 2, 4, 7, 2, 7, 5, 11, 2, 5, -1}, // Corrected case 228 (15 indices + 1x-1 = 16)
    {8, 4, 7, 10, 11, 1, 11, 3, 1, 11, 5, 3, -1, -1, -1, -1}, // Corrected case 229 (12 indices + 4x-1 = 16)
    {5, 10, 11, 1, 0, 7, 1, 7, 8, 1, 7, 4, -1, -1, -1, -1}, // Corrected case 230 (12 indices + 4x-1 = 16)
    {0, 5, 4, 0, 11, 5, 0, 3, 11, 8, 7, 10, 9, 5, 3, -1}, // Corrected case 231 (15 indices + 1x-1 = 16)
    {7, 4, 9, 7, 9, 11, 11, 9, 8, 11, 5, 9, -1, -1, -1, -1}, // Corrected case 232 (12 indices + 4x-1 = 16)
    {9, 5, 4, 10, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, // 233
    {3, 0, 8, 9, 5, 4, 10, 11, 6, -1, -1, -1, -1, -1, -1, -1},
    {4, 0, 1, 4, 1, 5, 6, 10, 11, -1, -1, -1, -1, -1, -1, -1}, // 235
    {8, 3, 1, 8, 1, 5, 5, 1, 4, 10, 11, 6, -1, -1, -1, -1}, // Corrected case 236 (12 indices + 4x-1 = 16)
    {1, 2, 11, 1, 11, 4, 1, 4, 5, 11, 6, 10, -1, -1, -1, -1}, // Corrected case 237 (12 indices + 4x-1 = 16)
    {3, 0, 8, 1, 2, 4, 2, 5, 4, 2, 11, 5, 6, 10, 11, -1}, // Corrected case 238 (15 indices + 1x-1 = 16)
    {4, 0, 2, 4, 2, 5, 5, 2, 11, 5, 11, 6, 10, 5, 6, -1}, // Corrected case 239 (15 indices + 1x-1 = 16)
    {3, 8, 5, 3, 5, 2, 2, 5, 11, 10, 6, 5, -1, -1, -1, -1}, // Corrected case 240 (12 indices + 4x-1 = 16)
    {2, 10, 11, 3, 6, 10, 3, 5, 6, 3, 4, 5, -1, -1, -1, -1}, // Corrected case 241 (12 indices + 4x-1 = 16)
    {8, 5, 4, 8, 11, 5, 11, 10, 5, 11, 0, 10, -1, -1, -1, -1}, // Corrected case 242 (12 indices + 4x-1 = 16)
    {5, 4, 0, 5, 0, 11, 11, 0, 3, 11, 6, 10, -1, -1, -1, -1}, // Corrected case 243 (12 indices + 4x-1 = 16)
    {8, 5, 4, 8, 1, 5, 8, 11, 1, 11, 6, 1, 10, 11, 6, -1}, // Corrected case 244 (15 indices + 1x-1 = 16)
    {10, 6, 11, 1, 4, 5, 4, 7, 5, 4, 3, 7, 9, 5, 4, -1}, // Corrected case 245 (15 indices + 1x-1 = 16)
    {4, 7, 8, 9, 5, 1, 10, 11, 6, -1, -1, -1, -1, -1, -1, -1}, // 246
    {1, 5, 9, 1, 7, 5, 1, 3, 7, 6, 10, 11, 4, 7, 3, -1}, // Corrected case 247 (15 indices + 1x-1 = 16)
    {1, 5, 4, 1, 4, 8, 1, 8, 0, 10, 11, 6, 7, 8, 4, -1}, // Corrected case 248 (15 indices + 1x-1 = 16)
    {10, 11, 6, 7, 3, 8, 3, 9, 8, 3, 5, 9, 4, 8, 9, -1}, // Corrected case 249 (15 indices + 1x-1 = 16)
    {6, 9, 5, 6, 11, 9, 11, 8, 9, 11, 7, 8, -1, -1, -1, -1}, // Corrected case 250 (12 indices + 4x-1 = 16)
    {3, 6, 11, 3, 0, 6, 0, 5, 6, 0, 9, 5, 7, 6, 5, -1}, // Corrected case 251 (15 indices + 1x-1 = 16)
    {0, 1, 5, 0, 5, 8, 8, 5, 7, 8, 7, 6, 11, 8, 6, -1}, // Corrected case 252 (15 indices + 1x-1 = 16)
    {7, 6, 11, 9, 5, 2, 5, 1, 2, 5, 3, 1, -1, -1, -1, -1}, // Corrected case 253 (12 indices + 4x-1 = 16)
    {9, 5, 2, 9, 2, 8, 8, 2, 0, 11, 7, 6, 3, 2, 8, -1}, // Corrected case 254 (15 indices + 1x-1 = 16)
    {2, 5, 1, 2, 7, 5, 2, 0, 7, 0, 6, 7, 11, 0, 6, -1}  // Corrected case 255 (15 indices + 1x-1 = 16)
};
} // namespace MarchingCubes